package com.princeton.unionfind;

public class NetworkUF {

	private int[]  id;
	
	public NetworkUF(int N) {
		 id = new int[N];
		 
		 for (int i = 0; i < N; i++)
			 id[i] = i;
	}
	
	public boolean connected(int p, int q) {
		return id[p] == id[q];
	}
	
	public void union(int p, int q) {
		int idp = id[p];
		int idq = id[q];
		
		for (int i = 0; i < id.length; i++) {
			if (id[i] == idp) id[i] = idq;
		}
			
	}
	
	public boolean findAll() {
		int a = id[0];
		int i;
		boolean c = false;
		for ( i = 0; i < id.length; i++)
		 while (a == id[i]) c = true;
		
		return c;
	}
}


